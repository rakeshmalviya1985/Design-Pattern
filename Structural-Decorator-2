// CPP program to demonstrate 
// Decorator pattern
#include <iostream>
#include <string>
using namespace std;

// Concrete Component 
class PlanPizza 
{
public:

	float price()
	{
		return 30;
	}
};


class paneerPizza:public PlanPizza
{   
    public:
    float baseprice;
    
    paneerPizza()
    {
        baseprice = PlanPizza::price();
    }
    float price()
	{
	    cout<<"baseprice :"<<baseprice<<endl;
		return 40 + baseprice ;
	}
};


class paneerCheezPizza:public PlanPizza
{   
    public:
    float baseprice;
    
    paneerCheezPizza()
    {
        baseprice = PlanPizza::price();
    }
    float price()
	{
	    cout<<"baseprice :"<<baseprice<<endl;
		return 50 + baseprice ;
	}
};
int main()
{

paneerPizza mObj;


cout<<"price of mango : "<<mObj.price()<<endl;
paneerCheezPizza VObj;
cout<<"price of Vanilla : "<<VObj.price()<<endl;

return 0;
}
